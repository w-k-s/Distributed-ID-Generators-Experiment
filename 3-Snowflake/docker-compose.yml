version: "3.9"
services:

  service-registry:
    image: wkas/service-registry
    container_name: service-registry
    restart: always
    networks:
      - app
    ports:
      - "8761:8761"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 60s
      timeout: 30s
      retries: 5
    environment:
      SERVER_PORT: 8761

  snowflake-service-1:
    image: wkas/snowflake-service
    ports:
      - "9091:9090"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 60s
      timeout: 30s
      retries: 5
    environment:
      SERVER_PORT: 8080
      SPRING_APPLICATION_NAME: "snowflake-service"
      EUREKA_URI: "http://service-registry:8761/eureka"
    networks:
      app:
        aliases:
          - snowflake-service

  snowflake-service-2:
    image: wkas/snowflake-service
    ports:
      - "9092:9090"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 60s
      timeout: 30s
      retries: 5
    environment:
      SERVER_PORT: 8080
      SPRING_APPLICATION_NAME: "snowflake-service"
      EUREKA_URI: "http://service-registry:8761/eureka"
    networks:
      app:
        aliases:
          - snowflake-service

  snowflake-service-3:
    image: wkas/snowflake-service
    ports:
      - "9093:9090"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 60s
      timeout: 30s
      retries: 5
    environment:
      SERVER_PORT: 8080
      SPRING_APPLICATION_NAME: "snowflake-service"
      EUREKA_URI: "http://service-registry:8761/eureka"
    networks:
      app:
        aliases:
          - snowflake-service

  order-service-1:
    image: wkas/order-service
    ports:
      - "8081:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 60s
      timeout: 30s
      retries: 5
    restart: always
    environment:
      SERVER_ID: 1
      SERVER_PORT: 8080
      SPRING_DATASOURCE_URL: "jdbc:postgresql://order-service-db:5432/order_service"
      SPRING_DATASOURCE_USERNAME: "admin"
      SPRING_DATASOURCE_PASSWORD: "password"
      GRPC_CLIENT_GLOBAL_ADDRESS: "discovery:///snowflake-service"
      EUREKA_URI: "http://service-registry:8761/eureka"
    depends_on:
      - order-service-db
    networks:
      app:
        aliases:
          - order-service

  order-service-2:
    image: wkas/order-service
    ports:
      - "8082:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 60s
      timeout: 30s
      retries: 5
    restart: always
    environment:
      SERVER_ID: 2
      SERVER_PORT: 8080
      SPRING_DATASOURCE_URL: "jdbc:postgresql://order-service-db:5432/order_service"
      SPRING_DATASOURCE_USERNAME: "admin"
      SPRING_DATASOURCE_PASSWORD: "password"
      GRPC_CLIENT_GLOBAL_ADDRESS: "discovery:///snowflake-service"
      EUREKA_URI: "http://service-registry:8761/eureka"
    depends_on:
      - order-service-db
    networks:
      app:
        aliases:
          - order-service

  order-service-3:
    image: wkas/order-service
    ports:
      - "8083:8080"
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 60s
      timeout: 30s
      retries: 5
    environment:
      SERVER_ID: 3
      SERVER_PORT: 8080
      SPRING_DATASOURCE_URL: "jdbc:postgresql://order-service-db:5432/order_service"
      SPRING_DATASOURCE_USERNAME: "admin"
      SPRING_DATASOURCE_PASSWORD: "password"
      GRPC_CLIENT_GLOBAL_ADDRESS: "discovery:///snowflake-service"
      EUREKA_URI: "http://service-registry:8761/eureka"
    depends_on:
      - order-service-db
    networks:
      app:
        aliases:
          - order-service

  order-service-db:
    image: postgres:14.7-alpine
    environment:
      POSTGRES_DB: "order_service"
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "password"
    ports:
      - 5432:5432
    networks:
      app:
        aliases:
          - order-service-db

  loadbalancer:
    build:
      context: load-balancer
    ports:
      - "8080:80"
    depends_on:
      - order-service-1
      - order-service-2
      - order-service-3
    networks:
      app:

networks:
  app: